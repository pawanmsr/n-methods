#! /usr/bin/bash

set -e

CMAKE_BUILD_TYPE="Debug"

# Used by google_test.
export CMAKE_BUILD_TYPE=$CMAKE_BUILD_TYPE
# FIXME: find alternative to exporting env variable.

BUILD_TOOL="cmake" # This project uses cmake.
# Other build tools: meson, bazel, premake, etc.
BUILD_FLAGS="-Wdev -DBUILD_GMOCK=OFF -DCMAKE_BUILD_TYPE=$CMAKE_BUILD_TYPE" # "-GNinja"
# Cache is usually generated by unix makefile generator
# but Ninja is quicker at times. Ninja is also used by meson.
# Ninja Docs https://ninja-build.org/
CONFIG_FLAGS="--config $CMAKE_BUILD_TYPE"

TEST_TOOL="ctest"
TEST_FLAGS="--rerun-failed --output-on-failure"
# TODO: populate preset

display_options() {
    echo "Syntax: bash build.sh [options]"
    echo "Options"
    echo "  -h  Print this Help."
    echo "  -c  Force build from scratch."
    echo
}

clean_build() {
    if [ -d ./build/ ] ; then
        echo "Previous build found. Removing."
        echo
        rm -r ./build/*
        # FIXME: use flag for fresh build instead.
        # TODO: add --fresh flag for cmake version 3.24+.
    fi
}

clean_up() {
    # Clean up
    echo "Cleaning up."
    unset CMAKE_BUILD_TYPE
}

# Build
if command -v $BUILD_TOOL &>/dev/null ; then
    while getopts hc flag ; do
        case $flag in
            c) # remove build directory
                clean_build;;
            h) # show help and exit
                display_options
                exit;;
            \?) # show help but continue
                display_options;;
        esac
    done

    echo "Building using $BUILD_TOOL!"
    # Prepare for build.
    $BUILD_TOOL $BUILD_FLAGS -S . -B ./build/
    # Build.
    $BUILD_TOOL --build build $CONFIG_FLAGS
else
    echo "Build tool not found!"
    clean_up;
    exit 1;
fi

# Test
if command -v $TEST_TOOL &>/dev/null ; then
    echo "Testing using $TEST_TOOL!"
    cd build && $TEST_TOOL $TEST_FLAGS
else
    echo "Test tool not found!"
fi

clean_up;
